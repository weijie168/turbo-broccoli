<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
    <title>五四青年节·觉醒世代</title>
    <!-- 引入必要的库 -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.7.1/gsap.min.js"></script>
    <script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/camanjs/4.1.2/caman.full.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            -webkit-tap-highlight-color: transparent;
        }
        
        body {
            font-family: "PingFang SC", "Microsoft YaHei", sans-serif;
            background-color: #f8f9fa;
            color: #333;
            overflow-x: hidden;
            touch-action: pan-y;
        }
        
        /* 粒子背景容器 */
        #particle-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
        }
        
        /* 开屏页 */
        .splash-screen {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            color: white;
            text-align: center;
            z-index: 100;
            background: rgba(0, 0, 0, 0.5);
            transition: opacity 1s;
        }
        
        .splash-screen h1 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
        }
        
        .splash-screen p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
        }
        
        .enter-button {
            padding: 12px 30px;
            background: #ff2d55;
            color: white;
            border: none;
            border-radius: 50px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            box-shadow: 0 4px 15px rgba(255, 45, 85, 0.4);
            transition: all 0.3s;
        }
        
        .enter-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(255, 45, 85, 0.6);
        }
        
        .enter-button:active {
            transform: translateY(1px);
        }
        
        .arrow-down {
            margin-top: 30px;
            font-size: 2rem;
            animation: bounce 2s infinite;
        }
        
        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-20px);
            }
            60% {
                transform: translateY(-10px);
            }
        }
        
        /* 主内容容器 */
        .main-content {
            display: none;
            padding-bottom: 80px;
            max-width: 100%;
            margin: 0 auto;
        }
        
        /* PC端适配 */
        @media (min-width: 768px) {
            body {
                background: #f0f2f5;
            }
            .main-content {
                max-width: 500px;
                box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
                background: white;
                min-height: 100vh;
                position: relative;
            }
            #particle-container {
                display: none;
            }
            body {
                background: linear-gradient(135deg, #1a2a6c, #b21f1f, #fdbb2d);
                padding: 20px 0;
            }
        }
        
        /* 设备提示 */
        .device-notice {
            display: none;
            text-align: center;
            padding: 15px;
            background: #ffeb3b;
            color: #333;
            font-size: 0.9rem;
        }
        
        /* 章节标题 */
        .section-title {
            text-align: center;
            margin: 40px 0 20px;
            font-size: 1.8rem;
            color: #333;
            position: relative;
        }
        
        .section-title::after {
            content: "";
            display: block;
            width: 80px;
            height: 4px;
            background: #ff2d55;
            margin: 10px auto 0;
            border-radius: 2px;
        }
        
        /* 时间轴滑动 */
        .timeline-container {
            width: 100%;
            padding: 20px 0;
            margin: 30px 0;
        }
        
        .swiper-slide {
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            padding: 20px;
            height: auto;
            margin: 0 20px;
            width: 85%;
        }
        
        .year-card {
            position: relative;
            height: 100%;
        }
        
        .year-1919 {
            background: url('https://via.placeholder.com/800x600/F5F5DC/000000?text=1919') center/cover;
            color: #333;
        }
        
        .year-2024 {
            background: url('https://via.placeholder.com/800x600/E8F4FD/000000?text=2024') center/cover;
            color: #333;
        }
        
        .year-title {
            font-size: 1.8rem;
            font-weight: bold;
            margin-bottom: 15px;
            text-align: center;
            color: #ff2d55;
        }
        
        .year-content {
            background: rgba(255, 255, 255, 0.9);
            padding: 15px;
            border-radius: 10px;
        }
        
        .quote {
            font-style: italic;
            margin: 15px 0;
            padding-left: 15px;
            border-left: 3px solid #ff2d55;
        }
        
        /* 3D翻转卡片 */
        .flip-card {
            perspective: 1000px;
            margin: 20px auto;
            width: 90%;
            max-width: 300px;
        }
        
        .flip-card-inner {
            position: relative;
            width: 100%;
            height: 0;
            padding-bottom: 150%;
            transform-style: preserve-3d;
            transition: transform 0.8s;
        }
        
        .flip-card:hover .flip-card-inner {
            transform: rotateY(180deg);
        }
        
        .flip-card-front, .flip-card-back {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .flip-card-front {
            background: #f8f1e9;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .flip-card-back {
            background: #e8f4fd;
            transform: rotateY(180deg);
            padding: 20px;
            display: flex;
            align-items: center;
        }
        
        /* 气泡按钮 */
        .bubble-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 10px;
            margin: 20px 0;
        }
        
        .bubble {
            padding: 12px 20px;
            background: #ff2d55;
            color: white;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s;
            font-size: 0.9rem;
        }
        
        .bubble:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 10px rgba(255, 45, 85, 0.3);
        }
        
        /* 觉醒温度计 */
        .thermometer-section {
            background: white;
            padding: 30px 20px;
            margin: 30px 0;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        
        .thermometer-container {
            width: 90%;
            max-width: 400px;
            margin: 30px auto;
        }
        
        .thermometer-track {
            height: 20px;
            background: linear-gradient(to right, #f0f0f0, #ff2d55);
            border-radius: 10px;
            position: relative;
            margin-bottom: 15px;
            cursor: pointer;
        }
        
        .thermometer-thumb {
            position: absolute;
            width: 30px;
            height: 30px;
            background: white;
            border: 3px solid #ff2d55;
            border-radius: 50%;
            top: -5px;
            left: 50%;
            transform: translateX(-50%);
            cursor: grab;
            touch-action: none;
            user-select: none;
        }
        
        .thermometer-labels {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }
        
        .thermometer-label {
            font-size: 0.9rem;
            color: #666;
        }
        
        .personality-result {
            margin-top: 20px;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 10px;
            font-size: 1.2rem;
        }
        
        .personality-type {
            color: #ff2d55;
            font-weight: bold;
        }
        
        /* AR海报生成 */
        .poster-section {
            background: white;
            padding: 30px 20px;
            margin: 30px 0;
            border-radius: 15px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        
        .camera-container {
            width: 90%;
            max-width: 400px;
            height: 300px;
            margin: 20px auto;
            border-radius: 10px;
            overflow: hidden;
            position: relative;
            background: #f0f0f0;
        }
        
        #camera-view {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: none;
        }
        
        .camera-placeholder {
            width: 100%;
            height: 100%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #666;
            font-size: 1.2rem;
        }
        
        .camera-button {
            width: 60px;
            height: 60px;
            background: #ff2d55;
            border-radius: 50%;
            border: none;
            margin: 20px auto;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: 0 4px 10px rgba(255, 45, 85, 0.4);
        }
        
        .camera-button:active {
            transform: scale(0.95);
        }
        
        .camera-icon {
            color: white;
            font-size: 1.5rem;
        }
        
        #poster-canvas {
            width: 90%;
            max-width: 400px;
            margin: 20px auto;
            border-radius: 10px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
            display: none;
        }
        
        .save-button {
            padding: 12px 30px;
            background: #ff2d55;
            color: white;
            border: none;
            border-radius: 50px;
            font-size: 1.1rem;
            margin-top: 20px;
            cursor: pointer;
            display: none;
        }
        
        /* 底部导航 */
        .footer-nav {
            position: fixed;
            bottom: 0;
            left: 0;
            width: 100%;
            background: white;
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-around;
            padding: 10px 0;
            z-index: 100;
        }
        
        .nav-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            color: #666;
            text-decoration: none;
            font-size: 0.9rem;
        }
        
        .nav-icon {
            font-size: 1.5rem;
            margin-bottom: 5px;
        }
        
        .nav-item.active {
            color: #ff2d55;
        }
        
        /* 弹窗样式 */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.8);
            z-index: 1000;
            display: none;
            align-items: center;
            justify-content: center;
        }
        
        .modal-content {
            background: white;
            border-radius: 10px;
            padding: 30px;
            max-width: 90%;
            width: 500px;
            max-height: 80vh;
            overflow-y: auto;
            position: relative;
        }
        
        .close-modal {
            position: absolute;
            top: 15px;
            right: 15px;
            font-size: 1.5rem;
            cursor: pointer;
            color: #666;
        }
        
        .modal-title {
            color: #ff2d55;
            margin-bottom: 20px;
            font-size: 1.5rem;
        }
        
        /* 响应式调整 */
        @media (max-width: 768px) {
            .section-title {
                font-size: 1.5rem;
            }
            
            .year-title {
                font-size: 1.5rem;
            }
            
            .swiper-slide {
                width: 80%;
            }
        }
    </style>
</head>
<body>
    <!-- 粒子背景 -->
    <div id="particle-container"></div>
    
    <!-- 设备提示 -->
    <div class="device-notice" id="deviceNotice">
        建议在手机上体验完整功能，电脑端部分交互可能受限
    </div>
    
    <!-- 开屏页 -->
    <div class="splash-screen" id="splashScreen">
        <h1>五四 · 觉醒世代</h1>
        <p>跨越百年的青春对话</p>
        <button class="enter-button" id="enterButton">开启旅程</button>
        <div class="arrow-down">↓</div>
    </div>
    
    <!-- 主内容 -->
    <div class="main-content" id="mainContent">
        <!-- 时间轴对比 -->
        <h2 class="section-title">百年对话</h2>
        <div class="timeline-container">
            <div class="swiper-container" id="timelineSwiper">
                <div class="swiper-wrapper">
                    <!-- 1919年 -->
                    <div class="swiper-slide">
                        <div class="year-card year-1919">
                            <div class="year-content">
                                <h3 class="year-title">1919 · 五四运动</h3>
                                <p>一百年前，青年学子走上街头，为民族存亡呐喊。</p>
                                <div class="flip-card">
                                    <div class="flip-card-inner">
                                        <div class="flip-card-front">
                                            <img src="https://via.placeholder.com/300x200/F5F5DC/000000?text=五四运动历史照片" style="width:100%">
                                        </div>
                                        <div class="flip-card-back">
                                            <p class="quote">"以青春之我，创建青春之家庭，青春之国家，青春之民族。"<br>——李大钊</p>
                                        </div>
                                    </div>
                                </div>
                                <p>他们追求德先生(Democracy)与赛先生(Science)，开启了新文化运动。</p>
                            </div>
                        </div>
                    </div>
                    
                    <!-- 2024年 -->
                    <div class="swiper-slide">
                        <div class="year-card year-2024">
                            <div class="year-content">
                                <h3 class="year-title">2024 · 我们的时代</h3>
                                <p>今天，我们面临新的挑战与机遇：</p>
                                <div class="bubble-container">
                                    <div class="bubble" data-issue="AI伦理" onclick="showIssueDetail(this)">🤖 科技向善</div>
                                    <div class="bubble" data-issue="环保公平" onclick="showIssueDetail(this)">🌍 绿色生活</div>
                                    <div class="bubble" data-issue="文化自信" onclick="showIssueDetail(this)">🎨 文化传承</div>
                                </div>
                                <p>点击上方气泡，了解当代青年关注的热点议题。</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- 分页器 -->
                <div class="swiper-pagination"></div>
            </div>
        </div>
        
        <!-- 觉醒温度计 -->
        <h2 class="section-title">觉醒温度计</h2>
        <div class="thermometer-section">
            <p>你对社会议题的关注和参与程度是多少？</p>
            <div class="thermometer-container">
                <div class="thermometer-track" id="thermometerTrack">
                    <div class="thermometer-thumb" id="thermometerThumb"></div>
                </div>
                <div class="thermometer-labels">
                    <span class="thermometer-label">冷静观察</span>
                    <span class="thermometer-label">理性参与</span>
                    <span class="thermometer-label">积极行动</span>
                </div>
            </div>
            <div class="personality-result">
                你的类型是：<span class="personality-type" id="personalityType">请滑动上方温度计</span>
            </div>
        </div>
        
        <!-- AR海报生成 -->
        <h2 class="section-title">生成你的觉醒宣言</h2>
        <div class="poster-section">
            <p>拍摄照片，生成专属五四青年节宣言海报</p>
            <div class="camera-container">
                <video id="camera-view" autoplay playsinline></video>
                <div class="camera-placeholder" id="cameraPlaceholder">
                    <span id="cameraMessage">点击下方按钮启动摄像头</span>
                </div>
            </div>
            <button class="camera-button" id="cameraButton" onclick="initCamera()">
                <span class="camera-icon">📷</span>
            </button>
            <canvas id="poster-canvas"></canvas>
            <button class="save-button" id="saveButton" onclick="savePoster()">保存海报</button>
        </div>
        
        <!-- 底部导航 -->
        <div class="footer-nav">
            <a href="#" class="nav-item active">
                <span class="nav-icon">🏠</span>
                <span>首页</span>
            </a>
            <a href="#" class="nav-item">
                <span class="nav-icon">📜</span>
                <span>历史</span>
            </a>
            <a href="#" class="nav-item">
                <span class="nav-icon">🎨</span>
                <span>创作</span>
            </a>
            <a href="#" class="nav-item">
                <span class="nav-icon">👤</span>
                <span>我的</span>
            </a>
        </div>
    </div>
    
    <!-- 议题详情弹窗 -->
    <div class="modal" id="issueModal">
        <div class="modal-content">
            <span class="close-modal" onclick="closeModal()">×</span>
            <h3 class="modal-title" id="modalTitle"></h3>
            <p id="modalContent"></p>
        </div>
    </div>
    
    <script>
        // 初始化变量
        let cameraStream = null;
        let isMobileDevice = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent);
        let personalityTypes = [
            { min: 0, max: 30, type: "冷静观察者", desc: "你习惯理性分析，善于从多角度思考问题。" },
            { min: 31, max: 70, type: "理性行动派", desc: "你在了解事实后会采取行动，是可靠的变革力量。" },
            { min: 71, max: 100, type: "热血变革者", desc: "你充满激情，愿意为理想付出实际行动。" }
        ];
        
        // 议题数据
        let issuesData = {
            "AI伦理": {
                title: "人工智能与伦理",
                content: "随着AI技术快速发展，如何确保算法公平、透明成为重要议题。青年开发者正推动AI伦理框架的建立，让技术更好地服务人类。"
            },
            "环保公平": {
                title: "环境保护与公平",
                content: "气候变化影响全球，但发展中国家承受更多代价。青年环保组织倡导"气候正义"，推动可持续的绿色发展模式。"
            },
            "文化自信": {
                title: "文化传承与创新",
                content: "在全球化浪潮中，年轻一代用短视频、国潮设计等新形式传承传统文化，同时赋予其时代新内涵。"
            }
        };
        
        // DOM加载完成后执行
        document.addEventListener('DOMContentLoaded', function() {
            // 检测设备类型
            if (!isMobileDevice) {
                document.getElementById('deviceNotice').style.display = 'block';
            }
            
            // 初始化粒子背景
            initParticles();
            
            // 初始化时间轴滑动
            initTimelineSwiper();
            
            // 初始化温度计交互
            initThermometer();
            
            // 进入按钮点击事件
            document.getElementById('enterButton').addEventListener('click', function() {
                // 开屏页淡出
                gsap.to('#splashScreen', {
                    opacity: 0,
                    duration: 1,
                    onComplete: function() {
                        document.getElementById('splashScreen').style.display = 'none';
                        document.getElementById('mainContent').style.display = 'block';
                        
                        // 主内容入场动画
                        gsap.from('.section-title', {
                            y: 50,
                            opacity: 0,
                            duration: 0.8,
                            stagger: 0.2
                        });
                    }
                });
            });
        });
        
        // 初始化粒子背景
        function initParticles() {
            // 检测WebGL支持
            if (!Detector.webgl) {
                document.getElementById('particle-container').innerHTML = 
                    '<div style="color:white;text-align:center;padding:20px;">您的设备不支持3D效果</div>';
                return;
            }
            
            const container = document.getElementById('particle-container');
            
            // 创建场景
            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            camera.position.z = 30;
            
            // 创建渲染器
            const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
            renderer.setSize(window.innerWidth, window.innerHeight);
            container.appendChild(renderer.domElement);
            
            // 创建粒子
            const particlesGeometry = new THREE.BufferGeometry();
            const particlesCount = isMobileDevice ? 300 : 800; // 根据设备性能调整粒子数量
            
            const posArray = new Float32Array(particlesCount * 3);
            for(let i = 0; i < particlesCount * 3; i++) {
                posArray[i] = (Math.random() - 0.5) * 100;
            }
            
            particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));
            
            // 粒子材质
            const particlesMaterial = new THREE.PointsMaterial({
                size: isMobileDevice ? 0.1 : 0.2,
                color: 0xffffff,
                transparent: true,
                opacity: 0.8,
                blending: THREE.AdditiveBlending
            });
            
            // 创建粒子系统
            const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
            scene.add(particlesMesh);
            
            // 动画循环
            function animate() {
                requestAnimationFrame(animate);
                
                particlesMesh.rotation.x += 0.001;
                particlesMesh.rotation.y += 0.001;
                
                renderer.render(scene, camera);
            }
            
            animate();
            
            // 窗口大小调整
            window.addEventListener('resize', function() {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            });
        }
        
        // 初始化时间轴滑动
        function initTimelineSwiper() {
            const swiper = new Swiper('#timelineSwiper', {
                effect: 'coverflow',
                grabCursor: true,
                centeredSlides: true,
                slidesPerView: 'auto',
                coverflowEffect: {
                    rotate: 0,
                    stretch: 0,
                    depth: 100,
                    modifier: 2,
                    slideShadows: true,
                },
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true,
                },
            });
        }
        
        // 显示议题详情
        function showIssueDetail(element) {
            const issue = element.getAttribute('data-issue');
            const modal = document.getElementById('issueModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalContent = document.getElementById('modalContent');
            
            modalTitle.textContent = issuesData[issue].title;
            modalContent.textContent = issuesData[issue].content;
            modal.style.display = 'flex';
            
            // 弹窗动画
            gsap.from(modal, { opacity: 0, duration: 0.3 });
            gsap.from(modal.querySelector('.modal-content'), { y: 50, opacity: 0, duration: 0.5 });
        }
        
        // 关闭弹窗
        function closeModal() {
            const modal = document.getElementById('issueModal');
            gsap.to(modal, {
                opacity: 0,
                duration: 0.3,
                onComplete: function() {
                    modal.style.display = 'none';
                }
            });
        }
        
        // 初始化温度计交互
        function initThermometer() {
            const track = document.getElementById('thermometerTrack');
            const thumb = document.getElementById('thermometerThumb');
            const typeDisplay = document.getElementById('personalityType');
            
            let isDragging = false;
            let trackRect = track.getBoundingClientRect();
            let trackWidth = trackRect.width;
            let thumbPosition = 50; // 默认居中
            
            // 更新滑块位置
            const updateThumbPosition = function(clientX) {
                trackRect = track.getBoundingClientRect();
                trackWidth = trackRect.width;
                
                let newPosition = clientX - trackRect.left;
                newPosition = Math.max(0, Math.min(newPosition, trackWidth));
                
                thumbPosition = (newPosition / trackWidth) * 100;
                thumb.style.left = `${thumbPosition}%`;
                
                // 更新个性类型
                updatePersonalityType();
            };
            
            // 更新个性类型显示
            const updatePersonalityType = function() {
                const type = personalityTypes.find(t => 
                    thumbPosition >= t.min && thumbPosition <= t.max
                );
                
                if (type) {
                    typeDisplay.textContent = `${type.type} - ${type.desc}`;
                }
            };
            
            // 鼠标/触摸事件处理
            const handleStart = function(e) {
                isDragging = true;
                if (e.type === 'mousedown') {
                    updateThumbPosition(e.clientX);
                } else {
                    updateThumbPosition(e.touches[0].clientX);
                }
                e.preventDefault();
            };
            
            const handleMove = function(e) {
                if (!isDragging) return;
                if (e.type === 'mousemove') {
                    updateThumbPosition(e.clientX);
                } else {
                    updateThumbPosition(e.touches[0].clientX);
                }
            };
            
            const handleEnd = function() {
                isDragging = false;
            };
            
            // 添加事件监听器
            thumb.addEventListener('mousedown', handleStart);
            thumb.addEventListener('touchstart', handleStart, { passive: false });
            
            track.addEventListener('mousedown', function(e) {
                updateThumbPosition(e.clientX);
                handleStart(e);
            });
            
            track.addEventListener('touchstart', function(e) {
                updateThumbPosition(e.touches[0].clientX);
                handleStart(e);
            }, { passive: false });
            
            document.addEventListener('mousemove', handleMove);
            document.addEventListener('touchmove', handleMove, { passive: false });
            
            document.addEventListener('mouseup', handleEnd);
            document.addEventListener('touchend', handleEnd);
            
            // 初始位置
            thumb.style.left = `${thumbPosition}%`;
            updatePersonalityType();
        }
        
        // 初始化摄像头
        function initCamera() {
            if (!isMobileDevice) {
                document.getElementById('cameraMessage').textContent = "请在移动设备上使用拍照功能";
                return;
            }
            
            const video = document.getElementById('camera-view');
            const placeholder = document.getElementById('cameraPlaceholder');
            const button = document.getElementById('cameraButton');
            
            // 如果已经初始化，直接显示视频
            if (video.srcObject) {
                video.style.display = 'block';
                placeholder.style.display = 'none';
                return;
            }
            
            // 请求摄像头权限
            if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                button.disabled = true;
                document.getElementById('cameraMessage').textContent = "正在请求摄像头权限...";
                
                navigator.mediaDevices.getUserMedia({ 
                    video: { 
                        facingMode: 'user',
                        width: { ideal: 1280 },
                        height: { ideal: 720 }
                    } 
                })
                .then(function(stream) {
                    cameraStream = stream;
                    video.srcObject = stream;
                    video.style.display = 'block';
                    placeholder.style.display = 'none';
                    button.setAttribute('onclick', 'takeSnapshot()');
                    button.querySelector('.camera-icon').textContent = '📸';
                })
                .catch(function(error) {
                    console.error("摄像头访问错误:", error);
                    document.getElementById('cameraMessage').textContent = "无法访问摄像头，请确保已授予权限";
                    button.disabled = false;
                });
            } else {
                document.getElementById('cameraMessage').textContent = "您的浏览器不支持摄像头功能";
            }
        }
        
        // 拍摄快照
        function takeSnapshot() {
            const video = document.getElementById('camera-view');
            const canvas = document.getElementById('poster-canvas');
            const saveButton = document.getElementById('saveButton');
            
            if (!video.srcObject) {
                alert("请先初始化摄像头");
                return;
            }
            
            // 设置canvas尺寸
            const targetWidth = Math.min(800, video.videoWidth);
            const targetHeight = (targetWidth / video.videoWidth) * video.videoHeight;
            
            canvas.width = targetWidth;
            canvas.height = targetHeight;
            
            // 绘制图像
            const ctx = canvas.getContext('2d');
            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);
            
            // 添加滤镜效果
            Caman(canvas, function() {
                this.sepia(60)
                   .contrast(10)
                   .render(function() {
                       // 添加文字和装饰
                       addPosterText();
                   });
            });
            
            // 显示保存按钮
            saveButton.style.display = 'block';
            canvas.style.display = 'block';
            
            // 滚动到海报位置
            canvas.scrollIntoView({ behavior: 'smooth' });
        }
        
        // 添加海报文字
        function addPosterText() {
            const canvas = document.getElementById('poster-canvas');
            const ctx = canvas.getContext('2d');
            
            // 添加半透明背景
            ctx.fillStyle = 'rgba(0, 0, 0, 0.5)';
            ctx.fillRect(0, canvas.height - 180, canvas.width, 180);
            
            // 添加文字
            ctx.fillStyle = '#ffffff';
            ctx.font = 'bold 28px "Microsoft YaHei"';
            ctx.textAlign = 'center';
            ctx.fillText('五四青年节 · 2024', canvas.width / 2, canvas.height - 130);
            
            ctx.font = '22px "Microsoft YaHei"';
            ctx.fillText('觉醒世代 · 传承与创新', canvas.width / 2, canvas.height - 90);
            
            // 添加个性类型
            const personalityType = document.getElementById('personalityType').textContent.split(' - ')[0];
            ctx.font = 'bold 32px "Microsoft YaHei"';
            ctx.fillStyle = '#ff2d55';
            ctx.fillText(`「${personalityType}」`, canvas.width / 2, canvas.height - 40);
            
            // 添加水印
            ctx.font = '14px "Microsoft YaHei"';
            ctx.fillStyle = 'rgba(255, 255, 255, 0.7)';
            ctx.fillText('五四青年节H5互动', canvas.width / 2, canvas.height - 10);
        }
        
        // 保存海报
        function savePoster() {
            const canvas = document.getElementById('poster-canvas');
            
            if (!canvas) {
                alert("请先生成海报");
                return;
            }
            
            // 创建下载链接
            const link = document.createElement('a');
            link.download = '五四青年节宣言.png';
            link.href = canvas.toDataURL('image/png');
            
            // 触发下载
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
        
        // WebGL检测器
        const Detector = {
            webgl: (function() {
                try {
                    const canvas = document.createElement('canvas');
                    return !!(
                        window.WebGLRenderingContext &&
                        (canvas.getContext('webgl') || canvas.getContext('experimental-webgl'))
                    );
                } catch (e) {
                    return false;
                }
            })()
        };
    </script>
</body>
</html>